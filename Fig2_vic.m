% This script is required to generate data to be plotted in Figure 3 of 
% NCLIM-20051128B, "A Mechanism for Regional Variations in Snowpack Melt 
% Under Rising Temperature" by Evan and Eisenman 
%
% This script requires variables generated by Fig2.m and Fig1.m as well as
% output from the vic simulations

% Get number of sites
nsites = numel(T1);


% Get lat/lon
sno = load('../../data/snotel_narr.mat');
lon = sno.slon;
lat = sno.slat;
clearvars sno


% model runs
mdlname = 'vic_output.mat';
mdlpth = 'path_to_model_output';

% time & constants
t = (1:365)';
w = 2*pi/365;
wd = 360/365;

% read in the data
mdl = load([mdlpth mdlname]);
T0 = mdl.T0;
T1 = mdl.T1;

% variables to calculate from VIC output
z = NaN(nsites,1);
Ra = NaN(nsites,1);
Rm = NaN(nsites,1);
Tm = NaN(nsites,1);
Ta = NaN(nsites,1);
chi = NaN(nsites,numel(mdl.dT)); % date of peak SWE
dzdT = NaN(nsites,1);
dzdT_e = NaN(nsites,1);
Eq2 = NaN(nsites,1);
Eq2_e = NaN(nsites,1);

% Calculate T0, T1
for j = 1:nsites
    if max(mdl.S(j,end,:)) > 10 % must have peak SWE > 10 cm
        
        S = squeeze(nanmean(mdl.S(j,:,:),2));
        if min(S(find(S==max(S)):end)) == 0
            d = diff(S);
            T = mdl.T(j,:)' + mean(mdl.dT);
            T = T(2:end) + diff(T)/2;
            T = T(d<0);
            Tm(j) = min(T);
        end
        
        for k = 1:numel(mdl.dT)
            S = squeeze(mdl.S(j,k,:));
            
            if min(S(find(S==max(S),1):end)) == 0
                
                % date of peak swe
                chi(j,k) = t(find(S==max(S),1));

                % Calculate zeta as first day S=0 after peak snowpack
                z(j,k) = find(t > t(find(S==max(S),1)) & S < 0.1,1);

                % Calculate Ra & 
                fdos = find(t < t(find(S==max(S),1)) & S < 0.1,1,'last');
                if isempty(fdos) && max(S) > 0.1
                    fdos = 1;
                end
                Ra(j,k) = max(S)/(t(find(S==max(S),1)) - fdos);
                Rm(j,k) = max(S)/(z(j,k)-t(find(S==max(S),1))); 

                % Don't bother if there is no snowpack accumulation
                if max(S) < 1; z(j,k) = NaN; end
            
            end
        end
            
        y = squeeze(z(j,:))';
        x = mean(mdl.T(j,:))+mdl.dT';
        if var(y)>0
            [b,bi] = regress(y,[ones(size(x)) x]);
            dzdT(j) = b(2);
            dzdT_e(j) = b(2)-bi(2,1);
        end
            
    end
end
clearvars i j k fdos d T b x y Td



for i = 1:398
    ram = mean(Ra(i,:)./Rm(i,:),2);
    tm = Tm(i);
    eq2 = -1/w.*(1+ram)*1./sqrt(mdl.T1(i)^2-(mdl.T0(i)-tm).^2);
    eq2(mdl.T1(i)^2 < (mdl.T0(i)-tm).^2) = NaN;
    Eq2(i) = nanmean(eq2);
    Eq2_e(i) = nanstd(eq2);
end 


% Calculate d(SWE_Apr1)/dT0
dSdT = NaN(size(mdl.T0));
dmxdT = NaN(size(mdl.T0));
for i = 1:398
    
    y = mdl.S(i,:,184)';
    b = regress(y,[ones(size(y)) mdl.dT']);
    dSdT(i) = b(2); % cm/C
    
    y = chi(i,:)';
    b = regress(y,[ones(size(y)) mdl.dT']);
    dmxdT(i) = b(2); % d/C
    
end

